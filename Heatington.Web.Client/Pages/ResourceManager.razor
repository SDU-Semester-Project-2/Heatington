@page "/resource-manager"
@using Heatington.Web.Client.Components
@using System.Globalization
@rendermode InteractiveWebAssembly

<PageTitle>Resource Manager</PageTitle>


<div style="display: flex;  align-items: center; justify-content: center;">
    <MudText Typo="Typo.h4">Boilers</MudText>
    <MudButton style="margin-left: 15px"
               OnClick="() => OpenDialog()" Color="Color.Primary" Size="Size.Medium" Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.Add">
        Add Boiler
    </MudButton>
</div>

<MudGrid Spacing="4" Justify="Justify.Center" class="mt-5 mb-3">
    @foreach (var productionUnit in _productionUnits)
    {
        <MudCard Style="min-width: 200px; max-width: 300px; margin: 4px; padding: 1px">
            @* Using px because rem is too big *@
            <MudCardHeader Style="flex-direction: row; justify-content: center">
                <MudText Typo="Typo.h6">@productionUnit.FullName</MudText>
                <MudIconButton Icon="@Icons.Filled.Settings" Color="Color.Primary" OnClick="(() => OpenDialog(productionUnit))"/>
            </MudCardHeader>
            <MudCardContent class="text-center">

                <div style="display: flex; justify-content: center;">
                    @if (!string.IsNullOrEmpty(@productionUnit.PicturePath))
                    {
                        <MudImage Style="min-width: 220px; max-width: 220px; max-height: 220px; min-height: 220px"
                                  Src="@productionUnit.PictureBase64Url">
                        </MudImage>
                    }
                    @* This is not working right now because the API doesn't actuall store the images. TODO: Try this again
                    @if (!string.IsNullOrEmpty(@productionUnit.PicturePath)) *@
                    @* { *@
                    @*     var imageUrl = $"http://localhost:5271/api/productionunits/{@productionUnit.PicturePath}"; *@
                    @*     <MudImage Style="min-width: 220px; max-width: 220px; max-height: 220px; min-height: 220px" Src="@imageUrl"></MudImage> *@
                    @* } *@
                </div>
                <div class="mt-3">
                    <MudText Typo="Typo.body2">Max Heat: @productionUnit.MaxHeat MW</MudText>
                    <MudText Typo="Typo.body2">Max Electricity: @productionUnit.MaxElectricity MW</MudText>
                    <MudText Typo="Typo.body2">Production Costs: @productionUnit.ProductionCost DKK/Mwh(th)</MudText>
                    <MudText Typo="Typo.body2">CO2 Emissions: @productionUnit.Co2Emission kg/Mwh(th)</MudText>
                    <MudText Typo="Typo.body2">
                        Primary Energy Consumption: @productionUnit.GasConsumption MWh/MWh(th)
                    </MudText>
                </div>
            </MudCardContent>
        </MudCard>
    }
</MudGrid>

<MudDivider class="mt-5 mb-8"></MudDivider>

<MudContainer class="d-flex flex-row justify-center align-center text-center space-y-4 ">
    <div style="flex-direction: column">
        <MudText Typo="Typo.h4"> Heat Demand Data</MudText>
        <InputFile id="fileUpload" OnChange="HandleCSVUpload"></InputFile>
    </div>
</MudContainer>


@if (heatDemandDataList.Count != 0)
{
    <MudContainer class="mt-8">
        <MudDataGrid Items="@heatDemandDataList" Hover Dense Striped>
            <Columns>
                <PropertyColumn Property="data => data.StartDate" Title="Start Time"/>
                <PropertyColumn Property="data => data.EndDate" Title="End Time"/>
                <PropertyColumn Property="data => data.Value1" Title="Heat Demand MWh"/>
                <PropertyColumn Property="data => data.Value2" Title="Electricity Price DKK/MWh"/>
            </Columns>
        </MudDataGrid>
    </MudContainer>
}

